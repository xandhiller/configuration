# Run Scripts/Configs
exec --no-startup-id ~/.bashrc
set $mod Mod4
font pango:monospace 8
set $term urxvt -fg "#FFFFFF" -bg "#000000"
set $fn   XF86WakeUp
set $lock ~/.scripts/pLock/pLock.sh
set $kbLight python3 /usr/local/bin/kb-light.py --up
set $touchpad exec --no-startup-id sh ~/.scripts/touch_toggle
set $terminalDraw ~/.scripts/term
set $textbookOpener ~/.scripts/textbookOpener
set $listScripts ~/.scripts/listScripts

# Make all windows floating
#for_window [class="[.]*"] floating enable

# Good colours: #ababff (blue), #abffff(green)

gaps inner 10
gaps outer 2
# Set colours:
set $darkblack	 "#000000"
set $black	     "#222222"
set $white	     "#FFFFFF"
set $wh          "#333333"
set $cyan        "#AAFFFF"
set $purple      "#DDA0DD"
set $transparent "#000000"
set $red		     "#AA9999"
set $darkred	   "#330000"
set $orange      "#DD7020"
set $darkorange  "#000000"
set $blue        "#5A65FF"
set $darkblue    "#2F3690"
set $grey        "#D0D0D0"
set $darkgrey    "#606060"
set $subtlegrey  "#353535"

# This colour is the highlight colour of windows.
set $col         "#FF5555"
set $acol        "#AA0000"
set $col2        "#AADDDD"
set $acol2       "#55DDDD"
set $col3        "#DDA0DD" 
set $acol3       "#FFFFFF"
# Background of desktop
exec --no-startupid hsetroot -solid "#EEEEEE"

new_window pixel 4

#                       BORDER		    BACKGROUND	  TEXT		  
client.focused		      $col	        $col          $black	    $acol
client.unfocused	      $col2	        $col2         $black	    $acol2  
client.focused_inactive	$col3	        $col3         $black	    $acol3
client.urgent		        $grey	        $grey         $black	    $grey  
client.placeholder      $grey	        $grey         $black	    $grey  
client.background       $black

bar {
	font pango:mono 8
  status_command i3blocks
	position top
  strip_workspace_numbers yes
  mode hide
  modifier Ctrl
  colors{
    background "#000000"
    statusline #FFFFFF
    separator "#000000"
    focused_workspace #FFFFFF $grey #000000
    inactive_workspace $grey #000000 $grey
  }  
  tray_padding 0
}

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier       $mod
bindsym $mod+Return     exec $term
bindsym $mod+q          kill
bindsym $mod+b split    h
bindsym $mod+v split    v
bindsym $mod+d exec dmenu_run -l 25
bindsym $mod+semicolon  focus right

# alternatively, you can use the cursor keys:
bindsym $mod+h   focus left
bindsym $mod+j   focus down
bindsym $mod+k     focus up
bindsym $mod+l  focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+h   move left
bindsym $mod+Shift+j   move down
bindsym $mod+Shift+k     move up
bindsym $mod+Shift+l  move right

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout 
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle, resize set 1200 850, move position center

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Workspace Names
set $ws1 1: α 
set $ws2 2: β 
set $ws3 3: λ 
set $ws4 4: φ 

# Workspace Movements
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4

# Move to a workspace and go there.
bindsym $mod+Shift+1 move container to workspace $ws1, workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2, workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3, workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4, workspace $ws4

bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "i3-nagbar -b 'Yes, exit i3' 'i3-msg exit'"
 
mode "gaps-resize" {
        bindsym j       gaps inner all minus  5px
        bindsym k       gaps inner all plus   5px
        bindsym Shift+j gaps outer all minus  5px
        bindsym Shift+k gaps outer all plus   5px

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+g mode "gaps-resize"
bindsym $mod+Shift+g gaps inner all set 0; gaps outer all set 0;
# Reset gaps without having to refresh config
bindsym $mod+Mod1+g gaps inner all set 10; gaps outer all set 2;

mode "resize" {
        # same bindings, but for the arrow keys
        bindsym h resize shrink width   10 px or 10 ppt
        bindsym j resize grow   height  10 px or 10 ppt
        bindsym k resize shrink height  10 px or 10 ppt
        bindsym l resize grow   width   10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Pop-Up Mode
#for_window [instance="math"] client.focused $cyan
for_window [instance="terminal process"] floating enable
for_window [instance="terminal process"] resize set 500 100
for_window [instance="terminal process"] move position 550 400

bindsym $mod+p exec --no-startup-id $term -name "terminal process"

bindsym $mod+Shift+Next move scratchpad
bindsym $mod+Next scratchpad show
bindsym $mod+Shift+m exec --no-startup-id $term -n math -e octave --no-gui

# Bind certain kinds of windows to certain workspaces
# for_window [class="Firefox"] move to workspace 10, workspace 10
for_window [title="float-search"] floating enable
for_window [title="float-search"] resize set 625 400

bindsym $mod+Shift+Return exec --no-startup-id google-chrome-stable 
bindsym $mod+Ctrl+Return exec --no-startup-id google-chrome-stable #make it float
bindsym $mod+Shift+p exec --no-startup-id $term -e python3 

bindsym $mod+Shift+o exec --no-startup-id $term -e julia
bindsym $mod+c            move position center
bindsym $mod+Shift+c      resize set 625 400
bindsym $mod+Ctrl+space   floating toggle, resize set 625 400, move position center

# nb: Mod1 = alt keys
bindsym $mod+Mod1+space   floating toggle, resize set 700 870, move position center
#bindsym $mod+End          exec --no-startup-id systemctl suspend
bindsym $mod+i exec scrot && notify-send "Screenshot taken" -t 25

# Compton
exec --no-startup-id compton -f -i 1.0 

# bindsym $mod+Shift+v [class="urxvt" title="vim"] focus
exec --no-startup-id hsetroot -solid "#FFFFFF"

# Keyboard backlight
bindsym $fn+space $kbLight
bindsym $mod+t $touchpad

exec --no-startup-id sh ~/.scripts/keyRemaps 
bindsym $mod+y exec --no-startup-id sh ~/.scripts/keyRemaps && notify-send "Key mappings refreshed" -t 25

# bindsym $fn exec rofi -config ~/.config/rofi/config -show

exec --no-startup-id wal -i ~/Pictures/Wallpapers/rain_sybP.jpg
for_window [class="URxvt" instance="floating"] floating enable
bindsym $mod+z exec --no-startup-id $terminalDraw 
bindsym $mod+a exec --no-startup-id $textbookOpener
bindsym $mod+Up exec --no-startup-id $lock
bindsym $mod+s exec --no-startup-id $listScripts

exec --no-startup-id hsetroot -solid "#88eb88"
#  TODO:
# Sync background with status bar colour.
# Place text over the top of background -- stats, todo(s)
# Note taking mode macros in vim --  with toggle function like math mode.
# Circuit drawing mode macros in vim for tex -- with toggle function like math
#   mode.
# Config editing window script.
