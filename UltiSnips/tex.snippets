snippet beg
\begin{$1}
	$2
\end{$1}
endsnippet


snippet equ 
\begin{equation}
	$1
\end{equation}
endsnippet


snippet dm "Display Math"
\[
	$1
.\]
endsnippet


snippet im "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet


snippet frac "Fraction"
\frac{$1}{$2} $3
endsnippet


snippet Dd "Differentiate"
\frac{$1}{$2} \left( $3 \right)
endsnippet


snippet table "Create LaTeX table"
\begin{table}[!htbp]
	\centering
	\begin{tabular}{$1}
	\hline
	$1
	\hline
\end{table}
endsnippet


snippet sec "Section"
\section{$1}
endsnippet


snippet ssec "Subsection"
\subsection{$1}
endsnippet


snippet sssec "Subsubsection"
\subsubsection{$1}
endsnippet


snippet bmat "Bracket Matrix"
\begin{bmatrix}
	$1
\end{bmatrix}
endsnippet


snippet fig "Figure"
\begin{figure}[!htbp]
	\centering
	\includegraphics[width=$3\textwidth]{$1}
	\caption{$2}
\end{figure}
endsnippet


snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet


snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet td "superscript" iA
^{$1}$0
endsnippet


snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet


priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet


snippet OO "emptyset" iA
\O
endsnippet


snippet RR "real" iA
\R
endsnippet


snippet QQ "Q" iA
\Q
endsnippet


snippet ZZ "Z" iA
\Z
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet


snippet invs "inverse" iA
^{-1}
endsnippet


snippet !> "mapsto" iA
\mapsto 
endsnippet


snippet td "to the ... power" iA
^{$1}$0
endsnippet


snippet rd "to the ... power" iA
^{($1)}$0
endsnippet


snippet __ "subscript" iA
_{$1}$0
endsnippet


snippet ooo "\infty" iA
\infty
endsnippet


snippet <= "leq" iA
\le 
endsnippet


snippet >= "geq" iA
\ge 
endsnippet


snippet EE "geq" iA
\exists 
endsnippet


snippet AA "forall" iA
\forall 
endsnippet


snippet xnn "xn" iA
x_{n}
endsnippet


snippet ynn "yn" iA
y_{n}
endsnippet


snippet xii "xi" iA
x_{i}
endsnippet


snippet yii "yi" iA
y_{i}
endsnippet


snippet xjj "xj" iA
x_{j}
endsnippet


snippet yjj "yj" iA
y_{j}
endsnippet


snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet


snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet


snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet


snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet


snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet


snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

















