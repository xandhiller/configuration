global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal



snippet beg
\begin{$1}
	$2
\end{$1}
endsnippet


snippet equ 
\begin{equation}
	$1
\end{equation}
endsnippet


snippet dm "Display Math"
\[%
	$1
\]%
endsnippet


snippet im "Math" w
$ ${1} $`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet


snippet iM "Math" wA
$ ${1} $`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet


snippet frac "Fraction" i
\frac{$1}{$2}$3
endsnippet


snippet ddx "Differentiate" A
\frac{d}{${1:dx}} \left( ${2:F} \right) $3
endsnippet


#snippet fig "Create LaTeX Figure"
#\begin{figure}
#	$1
#\end{figure}
#endsnippet


snippet table "Create LaTeX table"
\begin{table}[!htbp]
	\centering
	\begin{tabular}{$1}
	\hline
	$1
	\hline
\end{table}
endsnippet


snippet sec "Section" bA
\section{$1} $2
endsnippet


snippet ssec "Subsection" bA
\subsection{$1} $2
endsnippet


snippet sssec "Subsubsection" bA
\subsubsection{$1} $2
endsnippet


snippet bmat "Bracket Matrix"
\begin{bmatrix}
	$1
\end{bmatrix}
endsnippet


snippet svg "Figure"
\begin{figure}[!htbp]
	\centering
	\includesvg[width=$3\textwidth]{$1} % No file extension.
	\caption{$2}
\end{figure}
endsnippet


snippet pic "Figure"
\begin{figure}[!htbp]
	\centering
	\includegraphics[width=$3\textwidth]{$1}
	\caption{$2}
\end{figure}
endsnippet


snippet fig "Figure"
\begin{figure}[!htbp]
	\centering
	$1
	\caption{$2}
\end{figure}
endsnippet


snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet


snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet


snippet td "superscript" iA
^{$1}$0
endsnippet


snippet OO "emptyset" iA
\O
endsnippet


snippet RR "real" iA
\R
endsnippet


snippet QQ "Q" iA
\Q
endsnippet


snippet ZZ "Z" iA
\Z
endsnippet


snippet CC "Z" iA
\C
endsnippet


snippet ~~ "~" iA
\sim 
endsnippet


snippet invs "inverse" iA
^{-1}
endsnippet


snippet !> "mapsto" iA
\mapsto $1
endsnippet


snippet <! "mapsfrom" iA
\mapsfrom $1
endsnippet

snippet td "to the ... power" i
^{$1}$0
endsnippet


snippet rd "to the ... power" i
^{($1)}$0
endsnippet


snippet __ "subscript" iA
_{$1}$0
endsnippet


snippet ooo "\infty" iA
\infty
endsnippet


snippet <= "leq" iA
\le 
endsnippet


snippet >= "geq" iA
\ge 
endsnippet


snippet EE "geq" iA
\exists 
endsnippet


snippet AA "forall" iA
\forall 
endsnippet


snippet xnn "xn" iA
x_{n}
endsnippet


snippet ynn "yn" iA
y_{n}
endsnippet


snippet xii "xi" iA
x_{i}
endsnippet


snippet yii "yi" iA
y_{i}
endsnippet


snippet xjj "xj" iA
x_{j}
endsnippet


snippet yjj "yj" iA
y_{j}
endsnippet


snippet xkk "xk" iA
x_{k}
endsnippet


snippet ykk "yk" iA
y_{k}
endsnippet


snippet xmm "xm" iA
x_{m}
endsnippet


snippet ykk "yk" iA
y_{k}
endsnippet


snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet


snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet


snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet


snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet


snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet


snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet


snippet ... "ldots" iA
\ \ldots \\$1
endsnippet


snippet inn "contained in" 
\in $1
endsnippet


snippet pset "Proper Set Notation"
\\{ ${1:x} \in ${2:\R} \ | \ $3 \\}
endsnippet


snippet set "Set Notation" i
\\left\\{ $1 \\right\\}
endsnippet


snippet sq "square" i
^{2}
endsnippet


snippet cb "cube" i
^{3}
endsnippet


snippet ss "subscript superscript" i
^{$1}_{$2}
endsnippet


snippet sb "Subscript" i
_{$1} $2
endsnippet


snippet sr "Superscript" i
^{$1} $2
endsnippet


snippet srr "Superscript" i
^{($1)} $2
endsnippet


snippet => "implies" iA
\Rightarrow $1
endsnippet


snippet =< "implied from" iA
\Leftarrow $1
endsnippet


snippet =/ "Not equal" iA
\neq
endsnippet


snippet intl "Integrate with limits"
\int^{$2}_{$1} $2 \ ${3:dx} $4
endsnippet


snippet text "Text"
\text{$1} $2
endsnippet


snippet int "Integrate"
\int $1 \ ${2:dx}
endsnippet


snippet cint "Contour integral"
\oint $1 \ ${2:dz}
endsnippet


snippet cintl "Integrate with limits"
\oint^{$2}_{$1} $2 \ ${3:dz} $4
endsnippet


snippet sin "Sine" A
\sin\left($1\right) $2
endsnippet


snippet cos "Cosine" A
\cos\left($1\right) $2
endsnippet


snippet tan "Tangent" A
\tan\left($1\right) $2
endsnippet

context "math()"
snippet omega "Omega" A
\omega$1
endsnippet


snippet of "Function of..." i
($1)$2
endsnippet


snippet <> "iff" A
\iff $1
endsnippet


snippet span "Span" w
\text{Span} \\{ $1 \\}
endsnippet


snippet qanda "Q&A" w
%
\qanda
{$1}
{$2} 
$3
%
endsnippet


snippet . "Dot Prod" w
\cdot$1
endsnippet


snippet pp "Parantheses" w
\left($1\right)
endsnippet


context "math()"
snippet pi "PI" iA
{\pi}$1
endsnippet


snippet pi "PI" i
{\pi}$1
endsnippet


context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z\)\(\}\{\-]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1} $0
endsnippet


context "math()"
snippet // "Frac" wA
\frac{$1}{$2}$3
endsnippet


context "math()"
snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet


context "math()"
snippet "([a-zA-Z]*)txt" "Text in Math Mode" ri
\text{`!p snip.rv=match.group(1)`$1}$2
endsnippet


context "math()"
snippet "([a-zA-Z])dot" "Dot" riA
\dot{`!p snip.rv=match.group(1)`} 
endsnippet


snippet mat "matrix block " w
matrix ($1) ($2) matrix$3
endsnippet


snippet 'matrix \((\d)\) \((\d)\) matrix'  "test" r
$0`!p
row = int(match.group(1))
columns = int(match.group(2))
s = ""
for j in range(row):
	for i in range(columns-1):
		s += r"<++> & " 
	s += r"<++> \\"
	if j!= (row-1):
		s += "\n\t\t"
	else:
		s += "\t\t"
snip.rv = s
`
endsnippet


context "math()"
snippet "([a-zA-Z]*)bf" "Text in Math Mode" ri
\mathbf{`!p snip.rv=match.group(1)`}$2
endsnippet


context "math()"
snippet rref "reduced row echelon form" 
\text{rref} ($1) $2
endsnippet


context "math()"
snippet ref "row echelon form" 
\text{ref} ($1) $2
endsnippet


context "math()"
snippet xx "times/multiplication" wA
\times $1
endsnippet


snippet item "itemize" w
\begin{itemize}
	\item $1
\end{itemize}
endsnippet		


context "math()"
snippet == "plus" iA
+ $1
endsnippet


context "math()"
snippet -> "rightarrow" iA
\rightarrow $1
endsnippet


context "math()"
snippet <- "leftarrow" iA
\leftarrow $1
endsnippet


context "math()"
snippet bb "bracket" wi
\left[ $1 \right]
endsnippet


context "math()"
snippet rank "rank()" 
\text{rank} ( $1 )
endsnippet
